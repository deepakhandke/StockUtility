@model StockUtility.Models.NSEInsiderResponse

@{
    ViewData["Title"] = "Swing";
}

<h1 class="display-4 text-center">Swing Trade Stocks Screener</h1>

<div>
    <h5 class="text-center">Stocks in which promoters made purchase of more than 1 Cr. in last 90 days</h5>
    <hr />
    <div class="container text-center">
        @if (Model.IsSuccess)
        {
            <a class="btn btn-sm btn-primary" asp-area="" asp-controller="Screener" asp-action="CorporateInfo">Filter Valid Stocks</a>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>Symbol</th>
                        <th>Purchase made</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var stock in Model.Stocks)
                    {
                        <tr>
                            <td>@stock.Symbol</td>
                            <td>@stock.Value</td>
                        </tr>
                    }

                </tbody>
            </table>
        }
        @if (Model.IsEligibleResponse)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Symbol</th>
                        <th>Average Price</th>
                        <th>Promoter Holding</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var stock in Model.Stocks)
                    {
                        @if (stock.AveragePrice != -1)
                        {
                            <tr>
                                <td>@stock.Symbol</td>
                                <td>@stock.AveragePrice</td>
                                <td>@stock.PromoterInfo</td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        }
    </div>

    @if (!Model.IsSuccess && !Model.IsEligibleResponse)
    {
        <div class="form-group">
            <label class="text-danger">@Model.ErrorMessage</label>
        </div>
    }
    @if (Model.IsCookieRequired)
    {
        @using (Html.BeginForm("Swing", "Screener", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Cookie, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="Cookie" value="" class="form-control" required />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    }
</div>
